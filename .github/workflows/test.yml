name: test

on:
  push:
  workflow_call:


jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.11']

    steps:
      - name: Check out repo code
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Install Poetry
        run: python -m pip install --no-cache-dir -v "poetry>=1.3,<1.4"

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev --no-interaction --no-root

      - name: Run linter
        run: poetry run flake8 --exclude .venv

      - name: Run tests
        run: |
          poetry run pytest tests/
